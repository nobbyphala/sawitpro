openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /profile:
    get:
      summary: Get current authorized user profile
      operationId: getProfile
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: Success response
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Update profile
      operationId: updateProfile
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /register:
    post:
      summary: Register profile
      operationId: registerProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterProfileRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegisterProfileResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /login:
    post:
      summary: Authorized user using credentials
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  parameters:
    AuthorizationHeader:
      name: Authorization
      in: header
      description: Token for authetication
      required: true
      schema:
        type: string
        format: jwt
  schemas:
    LoginRequest:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    GetProfileResponse:
      type: object
      required:
        - full_name
        - phone_number
      properties:
        full_name:
          type: string
        phone_number:
          type: string
    RegisterProfileRequest:
      type: object
      required:
        - full_name
        - phone_number
        - password
      properties:
        full_name:
          type: string
        phone_number:
          type: string
        password:
          type: string
    RegisterProfileResponse:
      type: object
      required:
        - profile_id
      properties:
        profile_id:
          type: string
    UpdateProfileRequest:
      type: object
      required:
        - full_name
        - phone_number
      properties:
        full_name:
          type: string
        phone_number:
          type: string
    UpdateProfileResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
