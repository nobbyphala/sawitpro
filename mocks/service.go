// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	entity "sawitpro/entity"

	gomock "github.com/golang/mock/gomock"
)

// MockProfileServiceInterface is a mock of ProfileServiceInterface interface.
type MockProfileServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockProfileServiceInterfaceMockRecorder
}

// MockProfileServiceInterfaceMockRecorder is the mock recorder for MockProfileServiceInterface.
type MockProfileServiceInterfaceMockRecorder struct {
	mock *MockProfileServiceInterface
}

// NewMockProfileServiceInterface creates a new mock instance.
func NewMockProfileServiceInterface(ctrl *gomock.Controller) *MockProfileServiceInterface {
	mock := &MockProfileServiceInterface{ctrl: ctrl}
	mock.recorder = &MockProfileServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileServiceInterface) EXPECT() *MockProfileServiceInterfaceMockRecorder {
	return m.recorder
}

// GetProfile mocks base method.
func (m *MockProfileServiceInterface) GetProfile(ctx context.Context, request entity.GetProfileRequest) (entity.GetProfileResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", ctx, request)
	ret0, _ := ret[0].(entity.GetProfileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockProfileServiceInterfaceMockRecorder) GetProfile(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockProfileServiceInterface)(nil).GetProfile), ctx, request)
}

// Login mocks base method.
func (m *MockProfileServiceInterface) Login(ctx context.Context, request entity.LoginRequest) (entity.LoginResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, request)
	ret0, _ := ret[0].(entity.LoginResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockProfileServiceInterfaceMockRecorder) Login(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockProfileServiceInterface)(nil).Login), ctx, request)
}

// Register mocks base method.
func (m *MockProfileServiceInterface) Register(ctx context.Context, request entity.ProfileRegisterRequest) (entity.ProfileRegisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", ctx, request)
	ret0, _ := ret[0].(entity.ProfileRegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockProfileServiceInterfaceMockRecorder) Register(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockProfileServiceInterface)(nil).Register), ctx, request)
}

// UpdateProfile mocks base method.
func (m *MockProfileServiceInterface) UpdateProfile(ctx context.Context, request entity.UpdateProfileRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", ctx, request)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockProfileServiceInterfaceMockRecorder) UpdateProfile(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockProfileServiceInterface)(nil).UpdateProfile), ctx, request)
}
